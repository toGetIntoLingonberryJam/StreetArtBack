"""Festivals + Reactions + Artists

Revision ID: 2eb1f78bebd0
Revises: 99f8ad99a1cb
Create Date: 2024-01-09 17:37:26.368595

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.ext.asyncio import AsyncSession

from app.db import async_session_maker
from app.repos.SQLAlchemy_repository import SQLAlchemyRepository

# revision identifiers, used by Alembic.
revision: str = "2eb1f78bebd0"
down_revision: Union[str, None] = "99f8ad99a1cb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "festival",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=70), nullable=False),
        sa.Column("description", sa.String(length=320), nullable=True),
        sa.Column("links", sa.ARRAY(sa.String()), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_festival_name"), "festival", ["name"], unique=False)
    op.create_table(
        "reaction",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("artwork_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["artwork_id"],
            ["artwork.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("artist", sa.Column("name", sa.String(length=50), nullable=False))
    op.add_column(
        "artist", sa.Column("description", sa.String(length=320), nullable=True)
    )
    op.add_column(
        "artist", sa.Column("links", postgresql.ARRAY(sa.String()), nullable=False)
    )
    op.alter_column("artist", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.create_index(op.f("ix_artist_name"), "artist", ["name"], unique=False)
    op.add_column("artwork", sa.Column("festival_id", sa.Integer(), nullable=True))
    op.drop_constraint("artworks_artist_id_fkey", "artwork", type_="foreignkey")
    op.create_foreign_key(None, "artwork", "artist", ["artist_id"], ["id"])
    op.create_foreign_key(None, "artwork", "festival", ["festival_id"], ["id"])
    op.drop_column("artwork", "festival")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "artwork",
        sa.Column("festival", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "artwork", type_="foreignkey")
    op.drop_constraint(None, "artwork", type_="foreignkey")
    op.create_foreign_key(
        "artworks_artist_id_fkey", "artwork", "user", ["artist_id"], ["id"]
    )
    op.drop_column("artwork", "festival_id")
    op.drop_index(op.f("ix_artist_name"), table_name="artist")
    op.alter_column("artist", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.drop_column("artist", "links")
    op.drop_column("artist", "description")
    op.drop_column("artist", "name")
    op.drop_table("reaction")
    op.drop_index(op.f("ix_festival_name"), table_name="festival")
    op.drop_table("festival")
    # ### end Alembic commands ###
