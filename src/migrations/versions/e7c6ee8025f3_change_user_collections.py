"""Change user collections

Revision ID: e7c6ee8025f3
Revises: 2eb1f78bebd0
Create Date: 2024-01-11 21:39:38.236174

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e7c6ee8025f3"
down_revision: Union[str, None] = "2eb1f78bebd0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "festival_like",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("festival_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["festival_id"],
            ["festival.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_festival_like_festival_id"),
        "festival_like",
        ["festival_id"],
        unique=False,
    )
    op.create_table(
        "artist_like",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("artist_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artist.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_artist_like_artist_id"), "artist_like", ["artist_id"], unique=False
    )
    op.create_table(
        "artwork_like",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("artwork_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["artwork_id"],
            ["artwork.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_artwork_like_artwork_id"), "artwork_like", ["artwork_id"], unique=False
    )
    op.drop_table("reaction")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "reaction",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("artwork_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["artwork_id"], ["artwork.id"], name="reaction_artwork_id_fkey"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name="reaction_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="reaction_pkey"),
    )
    op.drop_index(op.f("ix_artwork_like_artwork_id"), table_name="artwork_like")
    op.drop_table("artwork_like")
    op.drop_index(op.f("ix_artist_like_artist_id"), table_name="artist_like")
    op.drop_table("artist_like")
    op.drop_index(op.f("ix_festival_like_festival_id"), table_name="festival_like")
    op.drop_table("festival_like")
    # ### end Alembic commands ###
