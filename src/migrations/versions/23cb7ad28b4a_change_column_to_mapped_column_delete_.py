"""Change Column to mapped_column + delete artwork_additions table

Revision ID: 23cb7ad28b4a
Revises: c7559fd87e85
Create Date: 2023-12-05 01:40:43.891635

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "23cb7ad28b4a"
down_revision: Union[str, None] = "c7559fd87e85"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_artwork_additions_id", table_name="artwork_additions")
    op.drop_table("artwork_additions")
    op.alter_column(
        "artwork_images", "image_url", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "artwork_images", "artwork_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "artwork_images",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "artwork_location",
        "latitude",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )
    op.alter_column(
        "artwork_location",
        "longitude",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )
    op.alter_column(
        "artwork_location", "address", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "artwork_location", "artwork_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "artwork_moderation", "artwork_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "artwork_moderation",
        "status",
        existing_type=postgresql.ENUM(
            "PENDING", "APPROVED", "REJECTED", name="artworkmoderationstatus"
        ),
        nullable=False,
    )
    op.alter_column(
        "artwork_moderation",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
    )
    op.alter_column("artworks", "title", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "artworks", "year_created", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column("artworks", "festival", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "artworks", "description", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "artworks", "source_description", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "artworks", "added_by_user_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "artworks",
        "status",
        existing_type=postgresql.ENUM(
            "EXISTING", "DESTROYED", "OVERPAINTED", name="artworkstatus"
        ),
        nullable=False,
    )
    op.alter_column(
        "artworks",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "artworks",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "artworks",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
    )
    op.alter_column(
        "artworks",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "artworks",
        "status",
        existing_type=postgresql.ENUM(
            "EXISTING", "DESTROYED", "OVERPAINTED", name="artworkstatus"
        ),
        nullable=True,
    )
    op.alter_column(
        "artworks", "added_by_user_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "artworks", "source_description", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "artworks", "description", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column("artworks", "festival", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "artworks", "year_created", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column("artworks", "title", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "artwork_moderation",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
    )
    op.alter_column(
        "artwork_moderation",
        "status",
        existing_type=postgresql.ENUM(
            "PENDING", "APPROVED", "REJECTED", name="artworkmoderationstatus"
        ),
        nullable=True,
    )
    op.alter_column(
        "artwork_moderation", "artwork_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "artwork_location", "artwork_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "artwork_location", "address", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "artwork_location",
        "longitude",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.alter_column(
        "artwork_location",
        "latitude",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.alter_column(
        "artwork_images",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "artwork_images", "artwork_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "artwork_images", "image_url", existing_type=sa.VARCHAR(), nullable=True
    )
    op.create_table(
        "artwork_additions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("artwork_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["artwork_id"],
            ["artworks.id"],
            name="artwork_additions_artwork_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="artwork_additions_pkey"),
    )
    op.create_index(
        "ix_artwork_additions_id", "artwork_additions", ["id"], unique=False
    )
    # ### end Alembic commands ###
